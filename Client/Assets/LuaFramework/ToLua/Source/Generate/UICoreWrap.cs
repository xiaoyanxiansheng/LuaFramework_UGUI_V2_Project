//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UICoreWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UICore), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Init", Init);
		L.RegFunction("UnInit", UnInit);
		L.RegFunction("BindingWidget", BindingWidget);
		L.RegFunction("RegisterCallBack", RegisterCallBack);
		L.RegFunction("BindAllWidgets", BindAllWidgets);
		L.RegFunction("BindAllWidgetsHelper", BindAllWidgetsHelper);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("param", get_param, set_param);
		L.RegVar("paramArray", get_paramArray, set_paramArray);
		L.RegVar("cacheParam", get_cacheParam, set_cacheParam);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UICore obj = (UICore)ToLua.CheckObject<UICore>(L, 1);
			LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
			obj.Init(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnInit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UICore obj = (UICore)ToLua.CheckObject<UICore>(L, 1);
			LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
			obj.UnInit(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BindingWidget(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UICore obj = (UICore)ToLua.CheckObject<UICore>(L, 1);
			LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
			UICore.Param arg1 = (UICore.Param)ToLua.CheckObject<UICore.Param>(L, 3);
			obj.BindingWidget(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterCallBack(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			UICore obj = (UICore)ToLua.CheckObject<UICore>(L, 1);
			LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			UnityEngine.GameObject arg2 = (UnityEngine.GameObject)ToLua.CheckObject(L, 4, typeof(UnityEngine.GameObject));
			UnityEngine.EventSystems.EventTriggerType arg3 = (UnityEngine.EventSystems.EventTriggerType)ToLua.CheckObject(L, 5, typeof(UnityEngine.EventSystems.EventTriggerType));
			obj.RegisterCallBack(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BindAllWidgets(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UICore obj = (UICore)ToLua.CheckObject<UICore>(L, 1);
			obj.BindAllWidgets();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BindAllWidgetsHelper(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4)
			{
				UICore obj = (UICore)ToLua.CheckObject<UICore>(L, 1);
				UICore.Param arg0 = (UICore.Param)ToLua.CheckObject<UICore.Param>(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				UnityEngine.Transform arg2 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 4);
				UICore.Param o = obj.BindAllWidgetsHelper(arg0, arg1, arg2);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5)
			{
				UICore obj = (UICore)ToLua.CheckObject<UICore>(L, 1);
				UICore.Param arg0 = (UICore.Param)ToLua.CheckObject<UICore.Param>(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				UnityEngine.Transform arg2 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 4);
				bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
				UICore.Param o = obj.BindAllWidgetsHelper(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UICore.BindAllWidgetsHelper");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_param(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UICore obj = (UICore)o;
			System.Collections.Generic.List<UICore.Param> ret = obj.param;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index param on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_paramArray(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UICore obj = (UICore)o;
			System.Collections.Generic.List<UICore.ParamArray> ret = obj.paramArray;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index paramArray on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cacheParam(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UICore obj = (UICore)o;
			System.Collections.Generic.List<UICore.Param> ret = obj.cacheParam;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cacheParam on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_param(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UICore obj = (UICore)o;
			System.Collections.Generic.List<UICore.Param> arg0 = (System.Collections.Generic.List<UICore.Param>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UICore.Param>));
			obj.param = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index param on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_paramArray(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UICore obj = (UICore)o;
			System.Collections.Generic.List<UICore.ParamArray> arg0 = (System.Collections.Generic.List<UICore.ParamArray>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UICore.ParamArray>));
			obj.paramArray = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index paramArray on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_cacheParam(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UICore obj = (UICore)o;
			System.Collections.Generic.List<UICore.Param> arg0 = (System.Collections.Generic.List<UICore.Param>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UICore.Param>));
			obj.cacheParam = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cacheParam on a nil value");
		}
	}
}

